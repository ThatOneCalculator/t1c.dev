<div id="now-playing-container">
    <h3>Now playing:</h3>
    <div id="now-playing">
        <div id="track">
            <a
                id="title"
                href="https://listenbrainz.org/user/thatonecalculator/"
                target="_blank"
            >
            </a>
            <a
                id="artist"
                href="https://listenbrainz.org/user/thatonecalculator/"
                target="_blank"
            >
            </a>
        </div>
        <img id="album-art" />
    </div>
</div>

<script>
    let worker: Worker | null = null;

    const updateUI = (songData: any) => {
        const containerElement = document.getElementById(
            "now-playing-container",
        );
        const titleElement = document.getElementById("title");
        const artistElement = document.getElementById("artist");
        const albumArtElement = document.getElementById(
            "album-art",
        ) as HTMLImageElement;

        if (
            !containerElement ||
            !titleElement ||
            !artistElement ||
            !albumArtElement
        ) {
            return;
        }

        if (songData.error) {
            containerElement.style.display = "none";
            return;
        }

        titleElement.innerText = songData.title;
        artistElement.innerText = songData.artist;
        containerElement.style.display = "flex";
        albumArtElement.setAttribute("src", "");
        albumArtElement.style.display = "none";

        if (songData.albumArt) {
            albumArtElement.setAttribute("src", songData.albumArt);
            albumArtElement.style.display = "block";
        }

        containerElement.style.opacity = "1";
        containerElement.style.transform = "scale(1)";
        // @ts-ignore
        containerElement.style["margin-bottom"] = "1.5em";

        if (songData.hasAlbumArt) {
            containerElement.style.padding = "0.5em";
            // @ts-ignore
            containerElement.style["padding-left"] = "0.75em";
        } else {
            containerElement.style.padding = "0.75em";
        }
    };

    const initializeWorker = () => {
        if (worker) {
            worker.terminate();
        }

        worker = new Worker("/workers/music-worker.js");

        worker.addEventListener("message", (event) => {
            if (event.data.type === "SONG_DATA") {
                updateUI(event.data.data);
            }
        });

        worker.addEventListener("error", (error) => {
            console.error("Worker error:", error);
        });
    };

    const requestSongUpdate = () => {
        if (worker) {
            worker.postMessage({ type: "FETCH_SONG" });
        }
    };

    document.addEventListener("astro:page-load", () => {
        initializeWorker();
    });

    document.addEventListener("astro:before-preparation", () => {
        if (worker) {
            worker.terminate();
            worker = null;
        }
    });

    setInterval(requestSongUpdate, 60000);
</script>

<style is:inline>
    #now-playing-container {
        display: none;
        color: white;
        font-size: 1.2em;
        background-color: rgba(255, 255, 255, 0.2);
        background-filter: blur(10px);
        font-weight: bold;
        border-radius: 12px;
        flex-direction: row;
        place-items: center;
        gap: 0.75em;
        opacity: 0;
        padding: 0;
        transform: scale(0.8);
        will-change:
            opacity, padding, margin, transform, box-shadow, background-color;
        transition: all 0.45s cubic-bezier(0.68, -0.6, 0.32, 1.6);
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.15);

        &:hover {
            transform: scale(1.05) translate3d(0, -15px, 10px) !important;
            margin-bottom: 1.5em !important;
            margin-top: 1em !important;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.35);
            background-color: rgba(255, 255, 255, 0.25);
        }

        #now-playing {
            display: flex;
            flex-direction: row;
            place-items: center;
            gap: 0.75em;

            #album-art {
                height: 80px;
                width: 80px;
                border-radius: 14px;
                display: none;
            }

            #track {
                display: flex;
                flex-direction: column;

                #title {
                    /* color: green !important; */
                }

                #artist {
                    font-size: 0.9em;
                }
            }
        }

        @media (max-width: 600px) {
            flex-direction: column;
            gap: 0;
        }
    }
</style>
